{"version":3,"sources":["jsfuck.js"],"names":["global","self","exports","window","JSFuck","encode","module","USE_CHAR_CODE","MIN","MAX","SIMPLE","false","true","undefined","NaN","Infinity","CONSTRUCTORS","Array","Number","String","Boolean","Function","RegExp","MAPPING","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","$","_","GLOBAL","haveinit","input","wrapWithEval","fillMissingDigits","output","number","substr","fillMissingChars","key","charCodeAt","toString","replace","replaceMap","character","value","pattern","replacement","digitReplacer","numberReplacer","values","split","head","shift","concat","join","fromCharCode","replaceStrings","regEx","all","missing","count","findMissing","done","match","mappingReplacer","valueReplacer","error","console","push","test","WorkerGlobalScope"],"mappings":"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","file":"jsfuck.js","sourceRoot":"..","sourcesContent":["/*! JSFuck 0.4.0 - http://jsfuck.com */\r\n(function(global) {\r\n  // console.log(global)\r\n  //   \"use strict\";\r\n  self = typeof exports === \"undefined\" ? window : exports;\r\n  self.JSFuck = {\r\n    encode: encode\r\n  };\r\n  // console.log(this)\r\n  global.JSFuck = {\r\n    encode: encode\r\n  };\r\n  module.exports = global.JSFuck;\r\n  var USE_CHAR_CODE = \"USE_CHAR_CODE\";\r\n\r\n  var MIN = 32,\r\n    MAX = 126;\r\n\r\n  var SIMPLE = {\r\n    false: \"![]\",\r\n    true: \"!![]\",\r\n    undefined: \"[][[]]\",\r\n    NaN: \"+[![]]\",\r\n    Infinity: \"+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]]+[+[]])\" // +\"1e1000\"\r\n  };\r\n\r\n  var CONSTRUCTORS = {\r\n    Array: \"[]\",\r\n    Number: \"(+[])\",\r\n    String: \"([]+[])\",\r\n    Boolean: \"(![])\",\r\n    Function: '[][\"filter\"]',\r\n    RegExp: 'Function(\"return/0/\")()'\r\n  };\r\n\r\n  var MAPPING = {\r\n    a: '(false+\"\")[1]',\r\n    b: '(+(11))[\"toString\"](20)',\r\n    c: '([][\"filter\"]+\"\")[3]',\r\n    d: '(undefined+\"\")[2]',\r\n    e: '(true+\"\")[3]',\r\n    f: '(false+\"\")[0]',\r\n    g: \"(+false+[false]+String)[20]\",\r\n    h: '(+(101))[\"toString\"](21)[1]',\r\n    i: \"([false]+undefined)[10]\",\r\n    j: '(+(40))[\"toString\"](21)[1]',\r\n    k: '(+(20))[\"toString\"](21)',\r\n    l: '(false+\"\")[2]',\r\n    m: '(Number+\"\")[11]',\r\n    n: '(undefined+\"\")[1]',\r\n    o: '(true+[][\"filter\"])[10]',\r\n    p: '(+(211))[\"toString\"](31)[1]',\r\n    q: '(+(212))[\"toString\"](31)[1]',\r\n    r: '(true+\"\")[1]',\r\n    s: '(false+\"\")[3]',\r\n    t: '(true+\"\")[0]',\r\n    u: '(undefined+\"\")[0]',\r\n    v: '(+(31))[\"toString\"](32)',\r\n    w: '(+(32))[\"toString\"](33)',\r\n    x: '(+(101))[\"toString\"](34)[1]',\r\n    y: \"(NaN+[Infinity])[10]\",\r\n    z: '(+(35))[\"toString\"](36)',\r\n\r\n    A: \"(+false+Array)[10]\",\r\n    B: \"(+false+Boolean)[10]\",\r\n    C: 'Function(\"return escape\")()(\"<\")[2]',\r\n    D: 'Function(\"return escape\")()(\"=\")[2]',\r\n    E: '(RegExp+\"\")[12]',\r\n    F: \"(+false+Function)[10]\",\r\n    G: '(false+Function(\"return Date\")()())[30]',\r\n    H: USE_CHAR_CODE,\r\n    I: '(Infinity+\"\")[0]',\r\n    J: USE_CHAR_CODE,\r\n    K: USE_CHAR_CODE,\r\n    L: USE_CHAR_CODE,\r\n    M: '(true+Function(\"return Date\")()())[30]',\r\n    N: '(NaN+\"\")[0]',\r\n    O: USE_CHAR_CODE,\r\n    P: USE_CHAR_CODE,\r\n    Q: USE_CHAR_CODE,\r\n    R: \"(+false+RegExp)[10]\",\r\n    S: \"(+false+String)[10]\",\r\n    T: '(NaN+Function(\"return Date\")()())[30]',\r\n    U: USE_CHAR_CODE,\r\n    V: USE_CHAR_CODE,\r\n    W: USE_CHAR_CODE,\r\n    X: USE_CHAR_CODE,\r\n    Y: USE_CHAR_CODE,\r\n    Z: USE_CHAR_CODE,\r\n\r\n    \" \": '(NaN+[][\"filter\"])[11]',\r\n    \"!\": USE_CHAR_CODE,\r\n    '\"': '(\"\")[\"fontcolor\"]()[12]',\r\n    \"#\": USE_CHAR_CODE,\r\n    $: USE_CHAR_CODE,\r\n    \"%\": 'Function(\"return escape\")()(\"<\")[0]',\r\n    \"&\": USE_CHAR_CODE,\r\n    \"'\": USE_CHAR_CODE,\r\n\r\n    \"(\": '(false+[][\"filter\"])[20]',\r\n    \")\": '(true+[][\"filter\"])[20]',\r\n    \"*\": USE_CHAR_CODE,\r\n    \"+\": \"(+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]])+[])[2]\",\r\n    \",\": '[[]][\"concat\"]([[]])+\"\"',\r\n    \"-\": '(+(.+[0000000001])+\"\")[2]',\r\n    \".\":\r\n      \"(+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]\",\r\n    \"/\": '(false+[+false])[\"italics\"]()[10]',\r\n    \":\": '(RegExp()+\"\")[3]',\r\n    \";\": USE_CHAR_CODE,\r\n    \"<\": '(\"\")[\"italics\"]()[0]',\r\n    \"=\": '(\"\")[\"fontcolor\"]()[11]',\r\n    \">\": '(\"\")[\"italics\"]()[2]',\r\n    \"?\": '(RegExp()+\"\")[2]',\r\n    \"@\": USE_CHAR_CODE,\r\n    \"[\": '(GLOBAL+\"\")[0]',\r\n    \"\\\\\": USE_CHAR_CODE,\r\n\r\n    //  '\\\\': `( [][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]))[0]`  ,\r\n\r\n    \"]\": USE_CHAR_CODE,\r\n    \"^\": USE_CHAR_CODE,\r\n    _: USE_CHAR_CODE,\r\n    \"`\": USE_CHAR_CODE,\r\n    \"{\": '(NaN+[][\"filter\"])[21]',\r\n    // '{': '([][\"filter\"]+[])[18]',\r\n    \"|\": USE_CHAR_CODE,\r\n    \"}\": USE_CHAR_CODE,\r\n    \"}\": '(NaN+[][\"filter\"])[37]',\r\n    \"~\": USE_CHAR_CODE\r\n  };\r\n\r\n  var GLOBAL = 'Function(\"return this\")()';\r\n\r\n  function fillMissingChars() {\r\n    // console.log(\"fillMissingChars\")\r\n    // console.log(MAPPING)\r\n    for (var key in MAPPING) {\r\n      // console.log(key,MAPPING[key])\r\n      if (MAPPING[key] === USE_CHAR_CODE) {\r\n        // console.log(key,MAPPING[key])\r\n\r\n        // if (key === '\\\\') {\r\n        MAPPING[key] =\r\n          'Function(\"return unescape\")()(\"%\"' +\r\n          key\r\n            .charCodeAt(0)\r\n            .toString(16)\r\n            .replace(/(\\d+)/g, '+($1)+\"') +\r\n          '\")';\r\n        // console.log(key,MAPPING[key],MAPPING[key].length)\r\n        //  MAPPING[key] ='( [][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+{})[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+{})[!+[]+!![]+!![]+!![]+!![]]))'\r\n        // } else {\r\n        //   MAPPING[key] = '(\\\\u00' + key.charCodeAt(0).toString(16) + ')';\r\n        // }\r\n        // console.log(key, MAPPING[key])\r\n        // MAPPING[key] = 'Function(\"return unescape\")()(\"%\"' + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\")';\r\n        // console.log(key, MAPPING[key])\r\n        // mykey1 = `(unescape(\"%` + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\"))';\r\n        // MAPPING[key] = mykey1\r\n        // // MAPPING[key] = \"\\\\u\"+ key.charCodeAt(0).toString(16);\r\n        // // MAPPING[key] =  'unescape(\"%'+key.charCodeAt(0).toString(16)+'\")'\r\n        // console.log(key, mykey1)\r\n        // mykey1=\"(\" + encode(\"\\\\u00\" + key.charCodeAt(0).toString(16)) + \")\"\r\n        // console.log(mykey1.length,MAPPING[key].length)\r\n      }\r\n      // console.log(key,MAPPING[key],MAPPING[key].length)\r\n    }\r\n\r\n    // console.log(MAPPING)\r\n  }\r\n\r\n  function fillMissingDigits() {\r\n    // console.log(\"fillMissingDigits\")\r\n    var output, number, i;\r\n\r\n    for (number = 0; number < 10; number++) {\r\n      output = \"+[]\";\r\n\r\n      if (number > 0) {\r\n        output = \"+!\" + output;\r\n      }\r\n      for (i = 1; i < number; i++) {\r\n        output = \"+!+[]\" + output;\r\n      }\r\n      if (number > 1) {\r\n        output = output.substr(1);\r\n      }\r\n\r\n      MAPPING[number] = \"[\" + output + \"]\";\r\n      // console.log(number,MAPPING[number])\r\n    }\r\n  }\r\n\r\n  function replaceMap() {\r\n    // console.log(\"replaceMap\")\r\n    var character = \"\",\r\n      value,\r\n      original,\r\n      i,\r\n      key;\r\n\r\n    function replace(pattern, replacement) {\r\n      value = value.replace(new RegExp(pattern, \"gi\"), replacement);\r\n    }\r\n\r\n    function digitReplacer(_, x) {\r\n      return MAPPING[x];\r\n    }\r\n\r\n    function numberReplacer(_, y) {\r\n      var values = y.split(\"\");\r\n      var head = +values.shift();\r\n      var output = \"+[]\";\r\n\r\n      if (head > 0) {\r\n        output = \"+!\" + output;\r\n      }\r\n      for (i = 1; i < head; i++) {\r\n        output = \"+!+[]\" + output;\r\n      }\r\n      if (head > 1) {\r\n        output = output.substr(1);\r\n      }\r\n\r\n      return [output]\r\n        .concat(values)\r\n        .join(\"+\")\r\n        .replace(/(\\d)/g, digitReplacer);\r\n    }\r\n\r\n    for (i = MIN; i <= MAX; i++) {\r\n      character = String.fromCharCode(i);\r\n      value = MAPPING[character];\r\n      if (!value) {\r\n        continue;\r\n      }\r\n      original = value;\r\n\r\n      for (key in CONSTRUCTORS) {\r\n        replace(\"\\\\b\" + key, CONSTRUCTORS[key] + '[\"constructor\"]');\r\n      }\r\n\r\n      for (key in SIMPLE) {\r\n        replace(key, SIMPLE[key]);\r\n      }\r\n\r\n      replace(\"(\\\\d\\\\d+)\", numberReplacer);\r\n      replace(\"\\\\((\\\\d)\\\\)\", digitReplacer);\r\n      replace(\"\\\\[(\\\\d)\\\\]\", digitReplacer);\r\n\r\n      replace(\"GLOBAL\", GLOBAL);\r\n      replace('\\\\+\"\"', \"+[]\");\r\n      replace('\"\"', \"[]+[]\");\r\n\r\n      MAPPING[character] = value;\r\n    }\r\n  }\r\n\r\n  function replaceStrings() {\r\n    // console.log(\"replaceStrings\")\r\n    var regEx = /[^\\[\\]\\(\\)\\!\\+]{1}/g, // var regEx = /[^\\[\\]\\(\\)\\!\\+\\{\\}]{1}/g,\r\n      all,\r\n      value,\r\n      missing,\r\n      count = MAX - MIN;\r\n\r\n    function findMissing() {\r\n      var all,\r\n        value,\r\n        done = false;\r\n\r\n      missing = {};\r\n\r\n      for (all in MAPPING) {\r\n        value = MAPPING[all];\r\n\r\n        if (value.match(regEx)) {\r\n          missing[all] = value;\r\n          done = true;\r\n        }\r\n      }\r\n\r\n      return done;\r\n    }\r\n\r\n    function mappingReplacer(a, b) {\r\n      return b.split(\"\").join(\"+\");\r\n    }\r\n\r\n    function valueReplacer(c) {\r\n      return missing[c] ? c : MAPPING[c];\r\n    }\r\n\r\n    for (all in MAPPING) {\r\n      MAPPING[all] = MAPPING[all].replace(/\\\"([^\\\"]+)\\\"/gi, mappingReplacer);\r\n    }\r\n\r\n    while (findMissing()) {\r\n      for (all in missing) {\r\n        value = MAPPING[all];\r\n        value = value.replace(regEx, valueReplacer);\r\n\r\n        MAPPING[all] = value;\r\n        missing[all] = value;\r\n      }\r\n\r\n      if (count-- === 0) {\r\n        var error = \"Could not compile the following chars:\";\r\n        console.error(\"Could not compile the following chars:\", missing);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  var haveinit = 0;\r\n  function encode(input, wrapWithEval) {\r\n    if (haveinit === 0) {\r\n      fillMissingDigits();\r\n      fillMissingChars();\r\n      replaceMap();\r\n      replaceStrings();\r\n      haveinit = 1;\r\n    }\r\n\r\n    // console.log(\"encode\", input, wrapWithEval)\r\n    var output = [];\r\n\r\n    if (!input) {\r\n      return \"\";\r\n    }\r\n\r\n    var r = \"\";\r\n    for (var i in SIMPLE) {\r\n      r += i + \"|\";\r\n    }\r\n    r += \".\";\r\n\r\n    input.replace(new RegExp(r, \"g\"), function(c) {\r\n      // console.log(c)\r\n      var replacement = SIMPLE[c];\r\n      if (replacement) {\r\n        output.push(\"[\" + replacement + \"]+[]\");\r\n      } else {\r\n        replacement = MAPPING[c];\r\n        if (replacement) {\r\n          output.push(replacement);\r\n        } else {\r\n          // console.log(c)\r\n          if (c.charCodeAt(0) < 128) {\r\n            replacement =\r\n              \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\";\r\n          } else {\r\n            replacement =\r\n              \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\";\r\n          }\r\n          output.push(replacement);\r\n          MAPPING[c] = replacement;\r\n          // console.log(c,replacement)\r\n          /* \r\n                    if (c === \"J\") {\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(200000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(200000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n          \r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else if (c === \"O\") {\r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(24000000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(24000000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else {\r\n                      // console.log(c)\r\n                      // replacement1 =\r\n                      //   \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      //   \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      if (c.charCodeAt(0) < 128) {\r\n                        replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // console.log(replacement1.length,replacement.length)\r\n                      } else {\r\n                        replacement = \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      }\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      // replacement =encode(mytihuan)\r\n          \r\n                      // \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      // \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      // \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      // console.log(replacement)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } */\r\n        }\r\n      }\r\n    });\r\n\r\n    output = output.join(\"+\");\r\n\r\n    if (/^\\d$/.test(input)) {\r\n      output += \"+[]\";\r\n    }\r\n\r\n    if (wrapWithEval) {\r\n      output =\r\n        \"[][\" +\r\n        encode(\"filter\") +\r\n        \"]\" +\r\n        \"[\" +\r\n        encode(\"constructor\") +\r\n        \"]\" +\r\n        \"(\" +\r\n        output +\r\n        \")()\";\r\n      return output;\r\n    } else {\r\n      return \"(\" + output + \")\";\r\n    }\r\n  }\r\n\r\n  // fillMissingDigits();\r\n  // fillMissingChars();\r\n  // replaceMap();\r\n  // replaceStrings();\r\n\r\n  // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n  // fillMissingChars2();\r\n  // replaceMap();\r\n  // replaceStrings();\r\n  // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n  // self.JSFuck = {\r\n  //   encode: encode\r\n  // };\r\n  return global.JSFuck;\r\n})(\r\n  (typeof window !== \"undefined\" ? window : false) ||\r\n    (typeof WorkerGlobalScope !== \"undefined\" ? WorkerGlobalScope : false) ||\r\n    this\r\n);\r\n"]}